version: '3.8'

services:

#Servisler
  apigateway:
    container_name: apigateway
    ports:
      - '5001:5001'
    restart: always
    build: ./ApiGateway/
    depends_on:
      - redis_auth
    networks:
      - auth-newtrok

  examandquestion:
    container_name: examandquestion
    ports:
      - '5002:5002'
    restart: always
    build: ./Microservices/ExamAndQuestionService/
    depends_on:
      - apigateway
      - mongoexamandquestiondb
      - rabbitmqevent
    networks:
      - examquestion-network
      - rabbitmq-network
      - auth-newtrok

  userservice:
    container_name: userservice
    ports:
      - '5000:5000'
    restart: always
    build: ./Microservices/UserService/
    depends_on:
      - apigateway
      - mongouserdb
      - rabbitmqevent
    networks:
      - user-network
      - rabbitmq-network
      - auth-newtrok

#SORU DB VE EXPRESS
  mongoexamandquestiondb:
    image: mongo
    container_name: mongoexamandquestiondb
    restart: always
    ports:
      - '27017:27107'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - examquestion-network

  mongo-examquestion-express:
    image: mongo-express
    container_name: mongo-examquestion-express
    restart: always
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: mongoexamandquestiondb
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongoexamandquestiondb:27017/
    networks:
      - examquestion-network
    depends_on:
      - mongoexamandquestiondb

#KULLANICI VE EXPRESS
  mongouserdb:
    image: mongo
    container_name: mongouserdb
    restart: always
    command: mongod --port 27018
    ports:
      - '27018:27018'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - user-network

  mongo-user-express:
    image: mongo-express
    container_name: mongo-user-express
    restart: always
    ports:
      - '8082:8082'
    environment:
      ME_CONFIG_MONGODB_SERVER: mongouserdb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_PORT: 27018
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongouserdb:27018/
    networks:
      - user-network
    depends_on:
      - mongouserdb

#REDİS
  redis_auth:
    image: redis
    container_name: redis_auth
    hostname: 'redis'
    environment:
      - REDIS_PASSWORD=tugrul
    command: redis-server --appendonly yes --requirepass tugrul
    #    environment:
    #      - REDIS_PASSWORD=tugrul
    #      - REDIS_USERNAME=admin
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - auth-newtrok
#RABBİTMQ
  rabbitmqevent:
    image: rabbitmq:3-management
    container_name: rabbitmqevent
    hostname: rabbit
    ports:
      # The standard AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - rabbitmq-network

#VOLUME VE NETWORK
networks:
  auth-newtrok:
  examquestion-network:
  user-network:
  rabbitmq-network:
volumes:
  rabbitmq:
  redis_data:
